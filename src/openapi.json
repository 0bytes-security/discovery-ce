{"openapi": "3.1.0", "info": {"title": "Discovery", "version": "1.0.0"}, "paths": {"/health": {"get": {"summary": "Check Health", "operationId": "check_health_health_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/runs": {"get": {"tags": ["Runs"], "summary": "Get All Runs", "description": "Retrieve all runs with pagination. Results are paginated based on the creation date.", "operationId": "all-Runs", "responses": {"200": {"description": "Successfully retrieved the paginated list of runs.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Page_leaf_"}}}}, "500": {"description": "Internal server error."}}}}, "/runs/filters": {"post": {"tags": ["Runs"], "summary": "Filter Runs", "description": "Filter runs based on the provided filter criteria.", "operationId": "filter-Runs", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/FilterableColumns"}}}, "required": true}, "responses": {"200": {"description": "Successfully retrieved the paginated list of filtered runs.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Page_leaf_"}}}}, "400": {"description": "Bad request due to invalid filter criteria."}, "500": {"description": "Internal server error."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/runs/{run_id}": {"get": {"tags": ["Runs"], "summary": "Get Run by ID", "description": "Get a single run by its id. If the id is not found, a 404 response is returned.", "operationId": "getById-Runs", "parameters": [{"name": "run_id", "in": "path", "required": true, "schema": {"type": "string", "title": "Run Id"}}], "responses": {"200": {"description": "Successfully retrieved the run.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/leaf"}}}}, "400": {"description": "Invalid run id. Please provide a valid run id."}, "404": {"description": "Run not found. Please provide a valid run id."}, "500": {"description": "Server error."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/tasks": {"get": {"tags": ["Tasks"], "summary": "Get Available Tasks", "description": "Get a list of available tasks.", "operationId": "availableTasks-Tasks", "responses": {"200": {"description": "Successfully retrieved the list of available tasks.", "content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array", "title": "Response Availabletasks-Tasks"}}}}}}, "post": {"tags": ["Tasks"], "summary": "Run Task", "description": "Run a specified task with provided parameters.", "operationId": "runTask-Tasks", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/TaskRequest"}}}, "required": true}, "responses": {"200": {"description": "Successfully run the task.", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/RunResult"}}}}, "404": {"description": "Task not found."}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"FilterableColumns": {"properties": {"status": {"$ref": "#/components/schemas/RunStatus"}, "owner_id": {"type": "string", "title": "Owner Id"}, "parent_id": {"type": "string", "title": "Parent Id"}}, "type": "object", "required": ["status"], "title": "FilterableColumns"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "Page_leaf_": {"properties": {"items": {"items": {"$ref": "#/components/schemas/leaf"}, "type": "array", "title": "Items"}, "total": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Total"}, "page": {"anyOf": [{"type": "integer", "minimum": 1.0}, {"type": "null"}], "title": "Page"}, "size": {"anyOf": [{"type": "integer", "minimum": 1.0}, {"type": "null"}], "title": "Size"}, "pages": {"anyOf": [{"type": "integer", "minimum": 0.0}, {"type": "null"}], "title": "Pages"}}, "type": "object", "required": ["items", "total", "page", "size"], "title": "Page[discovery.db.models.Run.leaf]"}, "RunResult": {"properties": {"id": {"type": "string", "title": "Id"}}, "type": "object", "required": ["id"], "title": "RunResult"}, "RunStatus": {"type": "string", "enum": ["PENDING", "RUNNING", "SUCCESS", "FAILED"], "title": "RunStatus"}, "TaskRequest": {"properties": {"task": {"type": "string", "title": "Task"}, "params": {"type": "object", "title": "Params"}}, "type": "object", "required": ["task", "params"], "title": "TaskRequest"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "leaf": {"properties": {"id": {"type": "string", "maxLength": 36, "title": "Id"}, "name": {"type": "string", "title": "Name"}, "owner_id": {"anyOf": [{"type": "string", "maxLength": 255}, {"type": "null"}], "title": "Owner Id", "nullable": true}, "parameters": {"title": "Parameters", "default": {}}, "status": {"anyOf": [{"type": "string", "maxLength": 7}, {"type": "null"}], "title": "Status", "description": "PENDING: PENDING<br/>RUNNING: RUNNING<br/>SUCCESS: SUCCESS<br/>FAILED: FAILED", "default": "PENDING"}, "result": {"title": "Result", "default": {}}, "files": {"title": "Files", "default": []}, "errors": {"title": "Errors", "default": []}, "started_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Started At", "nullable": true}, "failed_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Failed At", "nullable": true}, "completed_at": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Completed At", "nullable": true}, "created_at": {"type": "string", "format": "date-time", "title": "Created At", "readOnly": true}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At", "readOnly": true}}, "additionalProperties": false, "type": "object", "required": ["id", "name", "created_at", "updated_at"], "title": "Run"}}}}